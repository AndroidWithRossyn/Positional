apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// Begin of reading the sensitive data
def noKeyFound = '"NO_KEY_FOUND"'
def googleMapsAPIKey = noKeyFound
def thisAppLicensingKey = noKeyFound

/**
 * Can be used for any API Key
 *
 * If you have a Google Maps API Key, you can create sensitive_data.txt file
 * in project's root directory containing your API keys and this code will
 * handle the changes.
 *
 * The format should look like this in sensitive_data.txt without any quotes
 *
 * googleMapsAPIKey YourKey
 */
def sensitiveDataFile = file('../sensitive_data.txt')
Properties sensitiveData = new Properties()

if (sensitiveDataFile.canRead()) {
    // Read the sensitive data from file sensitive_data.txt
    sensitiveData.load(new FileInputStream(sensitiveDataFile))

    if (sensitiveData != null) {
        if (sensitiveData.containsKey('googleMapsAPIKey')) {
            googleMapsAPIKey = sensitiveData['googleMapsAPIKey']
        }

        if (sensitiveData.containsKey('thisAppLicensingKey')) {
            thisAppLicensingKey = sensitiveData['thisAppLicensingKey']
        }
    }
}

/**
 * In this section a reviewer can insert directly his own
 * sensitive data by replacing the string "YOUR_API_KEY_GOES_HERE"
 * Just double click on the string and paste you own data
 */
if (googleMapsAPIKey == noKeyFound) {
    googleMapsAPIKey = '"YOUR_API_KEY_GOES_HERE"'
}
// End of reading the sensitive data

android {

    compileSdkVersion 34

    def appVersionCode = 173
    def appVersionName = "build${appVersionCode}_final"

    defaultConfig {
        applicationId "app.simple.positional"
        minSdkVersion 24
        //noinspection OldTargetApi
        targetSdkVersion 34
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        resValue "string", "googleMapsAPIKey", googleMapsAPIKey
        resValue "string", "thisAppLicensingKey", thisAppLicensingKey

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/databases/schemas".toString()]
            }
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    flavorDimensions "version"
    productFlavors {
        lite {
            dimension "version"
            applicationIdSuffix ".lite"
            versionNameSuffix "/lite"
        }

        full {
            dimension "version"
        }
    }

    buildTypes {
        release {

        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "_debug"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }
    namespace 'app.simple.positional'

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }
}

dependencies {

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.0'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.webkit:webkit:1.7.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    // Kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'

    // Google Services and Default android libs
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.maps.android:android-maps-utils:2.2.4'

    // Third Party Implementations
    implementation 'org.shredzone.commons:commons-suncalc:3.6'
    implementation 'com.github.Berico-Technologies:Geo-Coordinate-Conversion-Java:360781e5be'
    implementation 'com.github.vipulasri:timelineview:1.1.5'

    // Room components
    implementation "androidx.room:room-ktx:2.5.2"
    kapt "androidx.room:room-compiler:2.5.2"
    androidTestImplementation "androidx.room:room-testing:2.5.2"

    // Leak Canary -- debugImplementation because LeakCanary should only run in debug builds.
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
}

repositories {
    mavenCentral()
}
